%% vim: spell spelllang=en_us spellcapcheck= relativenumber:
= Software Design =
[[/software-design.apkg|Here]] is my [[https://apps.ankiweb.net|Anki]] deck that I'm using to prepare for the exam.

- [[/software-abstraction-modeling#Software abstraction & modeling|Software abstraction & modeling]]
    - [[/software-abstraction-modeling#Software abstraction & modeling#Models|Models]]
- [[/software-development-process#Software development process|Software development process]]
    - [[/software-development-process#Software development process#Waterfall development process|Waterfall development process]]
    - [[/software-development-process#Software development process#Agile development process|Agile development process]]
- [[/requirements-engineering#Requirements engineering with UML|Requirements engineering with UML]]
    - [[/requirements-engineering#Requirements engineering with UML#What is UML?|What is UML?]]
    - [[/requirements-engineering#Requirements engineering with UML#Requirements engineering|Requirements engineering]]
        - [[/requirements-engineering#Requirements engineering with UML#Requirements engineering#Natural language specification|Natural language specification]]
        - [[/requirements-engineering#Requirements engineering with UML#Requirements engineering#Use case diagrams|Use case diagrams]]
    - [[/requirements-engineering#Requirements engineering with UML#Summary of notation|Summary of notation]]
- [[/structure-modeling#Structure modeling with UML|Structure modeling with UML]]
    - [[/structure-modeling#Structure modeling with UML#Class|Class]]
        - [[/structure-modeling#Structure modeling with UML#Class#Attribute syntax|Attribute syntax]]
        - [[/structure-modeling#Structure modeling with UML#Class#Operation syntax|Operation syntax]]
        - [[/structure-modeling#Structure modeling with UML#Class#Class variable and class operation|Class variable and class operation]]
    - [[/structure-modeling#Structure modeling with UML#Relationships|Relationships]]
        - [[/structure-modeling#Structure modeling with UML#Relationships#Binary association|Binary association]]
        - [[/structure-modeling#Structure modeling with UML#Relationships#n-ary association|n-ary association]]
        - [[/structure-modeling#Structure modeling with UML#Relationships#Association class|Association class]]
        - [[/structure-modeling#Structure modeling with UML#Relationships#Aggregation|Aggregation]]
            - [[/structure-modeling#Structure modeling with UML#Relationships#Aggregation#Shared aggregation|Shared aggregation]]
            - [[/structure-modeling#Structure modeling with UML#Relationships#Aggregation#Composition|Composition]]
        - [[/structure-modeling#Structure modeling with UML#Relationships#Generalization|Generalization]]
    - [[/structure-modeling#Structure modeling with UML#Creating a class diagram|Creating a class diagram]]
- [[/oo-design-patterns#Object-oriented design patterns in UML|Object-oriented design patterns in UML]]
    - [[/oo-design-patterns#Object-oriented design patterns in UML#Creational|Creational]]
        - [[/oo-design-patterns#Object-oriented design patterns in UML#Creational#Singleton|Singleton]]
        - [[/oo-design-patterns#Object-oriented design patterns in UML#Creational#Factory method|Factory method]]
    - [[/oo-design-patterns#Object-oriented design patterns in UML#Structural|Structural]]
        - [[/oo-design-patterns#Object-oriented design patterns in UML#Structural#Adapter|Adapter]]
    - [[/oo-design-patterns#Object-oriented design patterns in UML#Behavioral|Behavioral]]
        - [[/oo-design-patterns#Object-oriented design patterns in UML#Behavioral#Observer|Observer]]
        - [[/oo-design-patterns#Object-oriented design patterns in UML#Behavioral#Chain of responsibility|Chain of responsibility]]
- [[/modeling-behavior-state-machines#Modeling behavior with UML State Machines|Modeling behavior with UML State Machines]]
    - [[/modeling-behavior-state-machines#Modeling behavior with UML State Machines#Introduction|Introduction]]
    - [[/modeling-behavior-state-machines#Modeling behavior with UML State Machines#States|States]]
    - [[/modeling-behavior-state-machines#Modeling behavior with UML State Machines#Transitions|Transitions]]
    - [[/modeling-behavior-state-machines#Modeling behavior with UML State Machines#Types of events|Types of events]]
    - [[/modeling-behavior-state-machines#Modeling behavior with UML State Machines#Types of states|Types of states]]
    - [[/modeling-behavior-state-machines#Modeling behavior with UML State Machines#Entry and exit points|Entry and exit points]]
- [[/sequence-diagrams#Sequence Diagrams|Sequence Diagrams]]
    - [[/sequence-diagrams#Sequence Diagrams#Introduction|Introduction]]
    - [[/sequence-diagrams#Sequence Diagrams#Basics|Basics]]
        - [[/sequence-diagrams#Sequence Diagrams#Basics#Interactions, interaction partners|Interactions, interaction partners]]
        - [[/sequence-diagrams#Sequence Diagrams#Basics#Messages|Messages]]
    - [[/sequence-diagrams#Sequence Diagrams#Combined fragments|Combined fragments]]
        - [[/sequence-diagrams#Sequence Diagrams#Combined fragments#Branches & loops|Branches & loops]]
        - [[/sequence-diagrams#Sequence Diagrams#Combined fragments#Concurrency and order|Concurrency and order]]
        - [[/sequence-diagrams#Sequence Diagrams#Combined fragments#Filters and assertions|Filters and assertions]]
    - [[/sequence-diagrams#Sequence Diagrams#Further language elements|Further language elements]]
- [[/philosophy-of-software-design#Philosophy of Software Design|Philosophy of Software Design]]
    - [[/philosophy-of-software-design#Philosophy of Software Design#Summary of Design Principles|Summary of Design Principles]]
    - [[/philosophy-of-software-design#Philosophy of Software Design#Summary of red flags|Summary of red flags]]
